<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GroupMapper"> 
	
	<insert id="createGroup" parameterType="GroupDTO">
		INSERT INTO `group`(name, link, detail, manager_id) VALUES(#{name}, #{link}, #{detail}, #{managerId}); 
	</insert>
	
	<select id="getGroupId" resultType="int">
		select id from `group` where link = #{link};
	</select>
	
	<select id="getGroupById" resultType="GroupDTO">
		SELECT * from `group` WHERE id=#{group_id} 
	</select>
	
	<select id="checkJoinExist" resultType="int">
		SELECT COUNT(id) from `join` WHERE user_id=#{user_id} AND group_id=#{group_id}
	</select>
	
	
	<insert id="createJoin" parameterType="GroupDTO">
		INSERT INTO `join`(user_id, group_id, auth) VALUES(#{user_id}, #{group_id}, #{auth});
	</insert>
	
	<select id="getNotMyGroup" parameterType="int" resultType="GroupDTO" >
		SELECT * FROM `group` 
			WHERE id IN(
				SELECT group_id from (
					SELECT U.id, J.group_id, auth FROM user AS U
								INNER JOIN `join` AS J ON J.user_id=U.id
								INNER JOIN `group` AS G ON G.id=J.id)as T
								where (auth = 0 or auth = 1) and id!=#{id});
	</select>
	
	<select id="getMyGroup" parameterType="int" resultType="GroupDTO" >
		SELECT * FROM `group` 
			WHERE id IN(
				SELECT group_id from (
					SELECT U.id, J.group_id, auth FROM user AS U
								INNER JOIN `join` AS J ON J.user_id=U.id
								INNER JOIN `group` AS G ON G.id=J.group_id)as T
								where (auth = 0 or auth = 1) and id=#{id});
	</select>
	
	<select id="groupListbyUserId" parameterType="int" resultType="GroupDTO">
		select GM.id, GM.manager_id as managerId, GM.managerName, GM.`name`, GM.detail,GM.link from  (select G.id, G.manager_id, U.`name` as managerName, G.name, G.link, G.detail from `group` AS G inner join `user` as U on G.manager_id = U.id) AS GM inner join `join` on GM.id = `join`.group_id where user_id=#{user_id};
	</select> 
	

</mapper>